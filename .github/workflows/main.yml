name: Build and Release JAR

on:
  push:
    tags:
      - "v*"
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 22
      uses: actions/setup-java@v4
      with:
        java-version: '22'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
          
    - name: Build with Maven
      run: mvn clean package

    - name: Verify JAR file exists
      run: |
        echo "Listing files in target/ directory..."
        ls -lh target/
        # Ensure the JAR file exists before moving to the next step
        if [ ! -f target/commandshield-${{ github.ref_name }}-SNAPSHOT.jar ]; then
          echo "Error: JAR file not found!"
          exit 1
        fi

    - name: Upload artifact
      id: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: minecraft-plugin
        path: target/commandshield-${{ github.ref_name }}-SNAPSHOT.jar  # Specify exact file path for upload

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository (again for release step)
      uses: actions/checkout@v4

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: minecraft-plugin

    - name: List files in the current directory after download
      run: |
        echo "Listing files in the current directory after artifact download..."
        ls -lh

    - name: Create GitHub Release and upload artifact
      uses: softprops/action-gh-release@v2
      with:
        files: ./commandshield-${{ github.ref_name }}-SNAPSHOT.jar  # Correct path to your JAR file
        tag_name: ${{ github.ref_name }}
        name:  ${{ github.ref_name }}
        body: |
          Command Shield ${{ github.ref_name }}.
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}

